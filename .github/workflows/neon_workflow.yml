name: Neon Database Branching

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  manage-neon-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Neon Branch
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: neondatabase/create-branch-action@v4
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: pr-${{ github.event.number }}
          username: ${{ secrets.NEON_USERNAME }}
          password: ${{ secrets.NEON_PASSWORD }}
          database: ${{ secrets.NEON_DATABASE }}
          ssl: true

      - name: Delete Neon Branch
        if: github.event.action == 'closed'
        uses: neondatabase/delete-branch-action@v4
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: pr-${{ github.event.number }}

      - name: Comment PR with connection details
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `pr-${{ github.event.number }}`;
            const projectId = '${{ secrets.NEON_PROJECT_ID }}';
            const host = `${projectId}.us-east-1.aws.neon.tech`;
            const dbUrl = `postgresql://${{ secrets.NEON_USERNAME }}:${{ secrets.NEON_PASSWORD }}@${host}/${{ secrets.NEON_DATABASE }}?sslmode=require&options=project%3D${projectId}%2Fbranch%3D${branchName}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🗄️ Database Branch Created
              
              Your PR now has its own isolated database branch:
              
              **Branch:** \`${branchName}\`
              **Host:** \`${host}\`
              **Database:** \`${{ secrets.NEON_DATABASE }}\`
              
              This branch will be automatically deleted when the PR is closed.
              
              > 💡 The database contains the same schema as production but with isolated data for testing.`
            });